spring:
  application:
    name: gateway-web
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许哪些域通过
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes: #网关路由配置
        - id: changgou_goods_route  #该路由的唯一标识符
          #用户请求需要路由到的指定服务地址
          #针对微服务的集群，我们可以使用LoadBalancerClient 路由过滤器实现负载均衡，配置使用lb://微服务名称
          uri: lb://goods
          #uri: http://localhost:18081
          #路由断言
          predicates:
            #-Host以域名来进行路由，所有以cloud.test.com**的请求都将被路由到uri标注的地址
            #- Host=cloud.test.com**
            #-Path以请求地址来进行路由，path=/brand所有以/brand的请求，都被路由
            - Path=/api/goods/**
            #希望所有的路径由微服务网关自动加上/api前缀，每次请求真实微服务网关的时候，需要使用微服务网关将/api去掉
          filters:
            #给请求添加前缀/brand
            #- PrefixPath=/brand
            #将请求中的路径去掉，请求路径以/分割，数字表示是去掉几个
            - StripPrefix=1
            - name: RequestRateLimiter  #请求数限流 名字不能随便写 ，使用默认的facatory
              args:
                #用户身份唯一标识符
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter:
                  replenishRate: 1  #每秒允许的请求数
                  burstCapacity: 4  #每秒允许并发请求【宽限的个数】
        #用戶路由配置
        - id: changgou_user_route
          uri: lb://user
          predicates:
            - Path=/api/user/**,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
          filters:
            - StripPrefix=1
        #订单微服务路由
        - id: changgou_order_route
          uri: lb://order
          predicates:
            - Path=/api/cart/**,/api/categoryReport/**,/api/orderConfig/**,/api/order/**,/api/orderItem/**,/api/orderLog/**,/api/preferential/**,/api/returnCause/**,/api/returnOrder/**,/api/returnOrderItem/**
          filters:
            - StripPrefix=1
  redis:
    host: 192.168.211.132
    port: 6379
server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true